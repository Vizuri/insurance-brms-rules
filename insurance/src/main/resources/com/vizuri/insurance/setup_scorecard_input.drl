package com.vizuri.insurance;

import com.vizuri.insurance.domain.Answer;
import com.vizuri.insurance.domain.Quote;
import com.vizuri.insurance.domain.ScoreCardInput;

import java.util.Calendar;

dialect "mvel"

rule "remove any old Scorecard"
	agenda-group "prepare-scorecard-input"
	salience 10
when
	$old : ScoreCardInput(updated == true ) 
then
	retract ($old);
	System.out.println("******** remove old scorcard input");
end

rule "insert a new Scorecard"
	agenda-group "prepare-scorecard-input"
	salience 9
when
	not ScoreCardInput( ) 
then
	ScoreCardInput $sc = new ScoreCardInput();
        $sc.setUpdated(true);
	insert ($sc);

	System.out.println("******** insert new scorcard input");
end

rule "Set fraud as input for scorecard"
	agenda-group "prepare-scorecard-input"
	salience 0
	lock-on-active true
when
	$answer : Answer( questionId == "a.fraud") 
	$sc : ScoreCardInput(updated == true) 
then
	modify($sc) {setFraud($answer.getBoolValue()) }
	System.out.println("******** set scorcard input: fraud: " + $answer.getBoolValue());
end

rule "Set FiledForBankrupcy as input for scorecard"
	agenda-group "prepare-scorecard-input"
	salience 0
	lock-on-active true
when
	$answer : Answer( questionId == "a.filedForBankruptcy") 
	$sc : ScoreCardInput(updated == true) 
then
	modify($sc) {setFiledForBankrupcy($answer.getBoolValue())}
	System.out.println("******** set scorcard input: FiledForBankrupcy: " + $answer.getBoolValue());
end

rule "Set Child Care Business Exists as input for scorecard"
	agenda-group "prepare-scorecard-input"
	salience 0
	lock-on-active true
when
	$answer : Answer( questionId == "p.childCareBusinessExists") 
	$sc : ScoreCardInput(updated == true) 
then
	modify($sc) {setChildCareBusinessExists($answer.getBoolValue()) }
	System.out.println("******** set scorcard input: ChildCareBusinessExists: " + $answer.getBoolValue());
end

rule "Set Property Age as input for scorecard"
	agenda-group "prepare-scorecard-input"
	salience 0
	lock-on-active true
when
	$answer : Answer( questionId == "p.yearBuilt") 
	$sc : ScoreCardInput(updated == true) 
then
	modify($sc) {setPropertyAge(Calendar.getInstance().get(Calendar.YEAR) - $answer.getDecValue()) }
	System.out.println("******** set scorcard input: Property Age: " + $sc.getPropertyAge());
end

rule "Set Property Roof Age as input for scorecard"
	agenda-group "prepare-scorecard-input"
	salience 0
	lock-on-active true
when
	$answer : Answer( questionId == "p.ageOfRoof") 
	$sc : ScoreCardInput(updated == true) 
then
	modify($sc) {setPropertyRoofAge($answer.getDecValue() + 0.0d) }
	System.out.println("******** set scorcard input: Property Roof Age: " + $sc.getPropertyRoofAge());
end
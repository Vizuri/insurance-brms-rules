package com.vizuri.insurance;

import com.vizuri.insurance.domain.Applicant;
import com.vizuri.insurance.domain.Property;
import com.vizuri.insurance.domain.Answer;
import com.vizuri.insurance.domain.Question;

dialect "mvel"

rule "test firing agenda group: question-display"
	agenda-group "question-display"
when
	applicant : Applicant( ) 
then
	
	System.out.println("******** Fired test rule for agenda group[question-display]");
end

rule "test firing agenda group: calculation"
	agenda-group "calculation"
when
	applicant : Applicant( ) 
then
	
	System.out.println("******** Fired test rule for agenda group[calculation]");
end

rule "Enable question[a.anyPreviousInsuranceDenials] "

	no-loop true
	agenda-group "question-display"
when
	$answer : Answer( questionId == "a.fraud", strValue == "true" ) 
	$question : Question(questionId == "a.anyPreviousInsuranceDenials")
then
	modify($question) {setEnabled( true )}
	//update( $question );
	System.out.println("Enable [a.anyPreviousInsuranceDenials] for agenda group[question-display]");
end

rule "Disable question[a.anyPreviousInsuranceDenials]"
	no-loop true
	agenda-group "question-display"
when
	$answer : Answer( questionId == "a.fraud", strValue == null || strValue == "false" ) 
	question : Question(questionId == "a.anyPreviousInsuranceDenials")
then
	modify($question) {setEnabled( false )}
	update( question );
end

rule "Enable question[p.childCareLiabilityCoverageRequired]"

	no-loop true
	agenda-group "question-display"
when
	property : Property(childCareBusinessExists == true ) 
	question : Question(questionId == "p.childCareLiabilityCoverageRequired")
then
	question.setEnabled( true );
	update( question );
end

rule "Disable question[p.childCareLiabilityCoverageRequired]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(childCareBusinessExists == null || childCareBusinessExists == false ) 
	question : Question(questionId == "p.childCareLiabilityCoverageRequired")
then
	question.setEnabled( false );
	update( question );
end

rule "Enable question[p.childCareLiabilityAlreadyExists]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(childCareLiabilityCoverageRequired == true ) 
	question : Question(questionId == "p.childCareLiabilityAlreadyExists")
then
	question.setEnabled( true );
	update( question );
end

rule "Disable question[p.childCareLiabilityAlreadyExists]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(childCareLiabilityCoverageRequired == null || childCareLiabilityCoverageRequired == false ) 
	question : Question(questionId == "p.childCareLiabilityAlreadyExists")
then
	question.setEnabled( false );
	update( question );
end

rule "Enable question[claims]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(previousClaims == true ) 
	question20 : Question(questionId == "p.claimDate")
	question21 : Question(questionId == "p.claimAmount")
then
	question20.setEnabled( true );
	question21.setEnabled( true );
	update( question20 );
	update( question21 );
end

rule "Disable question[claims]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(previousClaims == null || previousClaims == false ) 
	question20 : Question(questionId == "p.claimDate")
	question21 : Question(questionId == "p.claimAmount")
then
	question20.setEnabled( false );
	question21.setEnabled( false );
	update( question20 );
	update( question21 );
end

rule "Enable question[dogs]"
	no-loop true
	agenda-group "question-display"
when
	property : Property(dogExists == true ) 
	question23 : Question(questionId == "p.dogCount")
	question24 : Question(questionId == "p.dogType")
then
	question23.setEnabled( true );
	question24.setEnabled( true );
	update( question23 );
	update( question24 );
end

rule "Disable question[dogs]"

	no-loop true
	agenda-group "question-display"
when
	property : Property(dogExists == null || dogExists == false ) 
	question23 : Question(questionId == "p.dogCount")
	question24 : Question(questionId == "p.dogType")
then
	question23.setEnabled( false );
	question24.setEnabled( false );
	update( question23 );
	update( question24 );
end
